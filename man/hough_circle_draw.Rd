% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filters.R
\name{compile_hough_circle_draw}
\alias{compile_hough_circle_draw}
\alias{hough_circle_draw}
\title{Calculates a circular hough transform and draws the predicted circles}
\usage{
compile_hough_circle_draw(
  width,
  sobel_width,
  dim_img,
  tolerance = 11,
  pct_max = 0.95,
  blurr = 1/8
)

hough_circle_draw(
  img,
  width,
  sobel_width,
  tolerance,
  pct_max = 0.95,
  blurr = 1/8
)
}
\arguments{
\item{width}{expected width of the circles}

\item{sobel_width}{width of the sobel filter that will be used to detect the edges}

\item{pct_max}{the percentage of the maximum intensity that is considered to
draw the circles (defaults to 0.95, anyting 95% of the highest
intensity)}

\item{blurr}{numeric value indicating the ratio of the width to blurr,
1 means have the blurr be the same as the circle width}

\item{img}{image to transform}
}
\value{
image
}
\description{
This transform accentuates circular shapes
}
\section{Functions}{
\itemize{
\item \code{compile_hough_circle_draw}: pre-calculates parameters and returns a function
}}

\examples{
x = readImage(system.file('images', 'shapes.png', package='EBImage'))
hough <- hough_circle_draw(x, 51, 3, 3)
# display(hough)
# display(generate_overlay(x, hough > 0.68))
hough <- hough_circle_draw(x, 71, 3, 3, 0.9)
# display(hough)
# display(generate_overlay(x, hough > 0.68))

}
\seealso{
Other filters: 
\code{\link{circular_hough_transform}()},
\code{\link{compile_sobel_filter}()},
\code{\link{compile_variance_filter}()},
\code{\link{dog_filter}()},
\code{\link{hough_circles_max}()}
}
\concept{filters}
